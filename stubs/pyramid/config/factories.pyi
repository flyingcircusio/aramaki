from _typeshed import Incomplete
from pyramid.config.actions import action_method as action_method
from pyramid.interfaces import IDefaultRootFactory as IDefaultRootFactory, IExecutionPolicy as IExecutionPolicy, IRequestExtensions as IRequestExtensions, IRequestFactory as IRequestFactory, IResponseFactory as IResponseFactory, IRootFactory as IRootFactory, ISessionFactory as ISessionFactory
from pyramid.router import default_execution_policy as default_execution_policy
from pyramid.traversal import DefaultRootFactory as DefaultRootFactory
from pyramid.util import InstancePropertyHelper as InstancePropertyHelper, get_callable_name as get_callable_name

class FactoriesConfiguratorMixin:
    def set_root_factory(self, factory) -> None: ...
    def set_session_factory(self, factory) -> None: ...
    def set_request_factory(self, factory) -> None: ...
    def set_response_factory(self, factory) -> None: ...
    def add_request_method(self, callable: Incomplete | None = None, name: Incomplete | None = None, property: bool = False, reify: bool = False) -> None: ...
    def set_execution_policy(self, policy) -> None: ...

class _RequestExtensions:
    descriptors: Incomplete
    methods: Incomplete
    def __init__(self) -> None: ...
