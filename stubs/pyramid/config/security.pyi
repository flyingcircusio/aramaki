from _typeshed import Incomplete
from pyramid.config.actions import action_method as action_method
from pyramid.csrf import LegacySessionCSRFStoragePolicy as LegacySessionCSRFStoragePolicy
from pyramid.exceptions import ConfigurationError as ConfigurationError
from pyramid.interfaces import IAuthenticationPolicy as IAuthenticationPolicy, IAuthorizationPolicy as IAuthorizationPolicy, ICSRFStoragePolicy as ICSRFStoragePolicy, IDefaultCSRFOptions as IDefaultCSRFOptions, IDefaultPermission as IDefaultPermission, ISecurityPolicy as ISecurityPolicy, PHASE1_CONFIG as PHASE1_CONFIG, PHASE2_CONFIG as PHASE2_CONFIG
from pyramid.security import LegacySecurityPolicy as LegacySecurityPolicy
from pyramid.util import as_sorted_tuple as as_sorted_tuple

class SecurityConfiguratorMixin:
    def add_default_security(self) -> None: ...
    def set_security_policy(self, policy) -> None: ...
    def set_authentication_policy(self, policy) -> None: ...
    def set_authorization_policy(self, policy) -> None: ...
    def set_default_permission(self, permission) -> None: ...
    def add_permission(self, permission_name) -> None: ...
    def set_default_csrf_options(self, require_csrf: bool = True, token: str = 'csrf_token', header: str = 'X-CSRF-Token', safe_methods=('GET', 'HEAD', 'OPTIONS', 'TRACE'), check_origin: bool = True, allow_no_origin: bool = False, callback: Incomplete | None = None) -> None: ...
    def set_csrf_storage_policy(self, policy) -> None: ...

class DefaultCSRFOptions:
    require_csrf: Incomplete
    token: Incomplete
    header: Incomplete
    safe_methods: Incomplete
    check_origin: Incomplete
    allow_no_origin: Incomplete
    callback: Incomplete
    def __init__(self, require_csrf, token, header, safe_methods, check_origin, allow_no_origin, callback) -> None: ...
