import pkg_resources
from _typeshed import Incomplete
from collections.abc import Generator
from pyramid.config.actions import action_method as action_method
from pyramid.exceptions import ConfigurationError as ConfigurationError
from pyramid.interfaces import IPackageOverrides as IPackageOverrides, PHASE1_CONFIG as PHASE1_CONFIG
from pyramid.threadlocal import get_current_registry as get_current_registry

class OverrideProvider(pkg_resources.DefaultProvider):
    module_name: Incomplete
    def __init__(self, module) -> None: ...
    def get_resource_filename(self, manager, resource_name): ...
    def get_resource_stream(self, manager, resource_name): ...
    def get_resource_string(self, manager, resource_name): ...
    def has_resource(self, resource_name): ...
    def resource_isdir(self, resource_name): ...
    def resource_listdir(self, resource_name): ...

class PackageOverrides:
    overrides: Incomplete
    overridden_package_name: Incomplete
    def __init__(self, package, pkg_resources=...) -> None: ...
    def insert(self, path, source): ...
    def filtered_sources(self, resource_name) -> Generator[Incomplete, None, None]: ...
    def get_filename(self, resource_name): ...
    def get_stream(self, resource_name): ...
    def get_string(self, resource_name): ...
    def has_resource(self, resource_name): ...
    def isdir(self, resource_name): ...
    def listdir(self, resource_name): ...
    @property
    def real_loader(self): ...
    def get_data(self, path): ...
    def is_package(self, fullname): ...
    def get_code(self, fullname): ...
    def get_source(self, fullname): ...

class DirectoryOverride:
    path: Incomplete
    pathlen: Incomplete
    source: Incomplete
    def __init__(self, path, source) -> None: ...
    def __call__(self, resource_name): ...

class FileOverride:
    path: Incomplete
    source: Incomplete
    def __init__(self, path, source) -> None: ...
    def __call__(self, resource_name): ...

class PackageAssetSource:
    package: Incomplete
    pkg_name: Incomplete
    prefix: Incomplete
    def __init__(self, package, prefix) -> None: ...
    def get_path(self, resource_name): ...
    def get_filename(self, resource_name): ...
    def get_stream(self, resource_name): ...
    def get_string(self, resource_name): ...
    def exists(self, resource_name): ...
    def isdir(self, resource_name): ...
    def listdir(self, resource_name): ...

class FSAssetSource:
    prefix: Incomplete
    def __init__(self, prefix) -> None: ...
    def get_path(self, resource_name): ...
    def get_filename(self, resource_name): ...
    def get_stream(self, resource_name): ...
    def get_string(self, resource_name): ...
    def exists(self, resource_name): ...
    def isdir(self, resource_name): ...
    def listdir(self, resource_name): ...

class AssetsConfiguratorMixin:
    def override_asset(self, to_override, override_with, _override: Incomplete | None = None) -> None: ...
    override_resource = override_asset
