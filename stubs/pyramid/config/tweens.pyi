from _typeshed import Incomplete
from pyramid.config.actions import action_method as action_method
from pyramid.exceptions import ConfigurationError as ConfigurationError
from pyramid.interfaces import ITweens as ITweens
from pyramid.tweens import EXCVIEW as EXCVIEW, INGRESS as INGRESS, MAIN as MAIN
from pyramid.util import TopologicalSorter as TopologicalSorter, is_nonstr_iter as is_nonstr_iter, is_string_or_iterable as is_string_or_iterable

class TweensConfiguratorMixin:
    def add_tween(self, tween_factory, under: Incomplete | None = None, over: Incomplete | None = None): ...
    def add_default_tweens(self) -> None: ...

class Tweens:
    sorter: Incomplete
    explicit: Incomplete
    def __init__(self) -> None: ...
    def add_explicit(self, name, factory) -> None: ...
    def add_implicit(self, name, factory, under: Incomplete | None = None, over: Incomplete | None = None) -> None: ...
    def implicit(self): ...
    def __call__(self, handler, registry): ...
