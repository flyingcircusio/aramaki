from _typeshed import Incomplete
from pyramid.exceptions import ConfigurationError as ConfigurationError
from pyramid.traversal import find_interface as find_interface, resource_path_tuple as resource_path_tuple, traversal_path as traversal_path
from pyramid.util import as_sorted_tuple as as_sorted_tuple, is_nonstr_iter as is_nonstr_iter, object_description as object_description

class XHRPredicate:
    val: Incomplete
    def __init__(self, val, config) -> None: ...
    def text(self): ...
    phash = text
    def __call__(self, context, request): ...

class RequestMethodPredicate:
    val: Incomplete
    def __init__(self, val, config) -> None: ...
    def text(self): ...
    phash = text
    def __call__(self, context, request): ...

class PathInfoPredicate:
    orig: Incomplete
    val: Incomplete
    def __init__(self, val, config) -> None: ...
    def text(self): ...
    phash = text
    def __call__(self, context, request): ...

class RequestParamPredicate:
    val: Incomplete
    reqs: Incomplete
    def __init__(self, val, config) -> None: ...
    def text(self): ...
    phash = text
    def __call__(self, context, request): ...

class HeaderPredicate:
    val: Incomplete
    def __init__(self, val, config) -> None: ...
    def text(self): ...
    phash = text
    def __call__(self, context, request): ...

class AcceptPredicate:
    values: Incomplete
    def __init__(self, values, config) -> None: ...
    def text(self): ...
    phash = text
    def __call__(self, context, request): ...

class ContainmentPredicate:
    val: Incomplete
    def __init__(self, val, config) -> None: ...
    def text(self): ...
    phash = text
    def __call__(self, context, request): ...

class RequestTypePredicate:
    val: Incomplete
    def __init__(self, val, config) -> None: ...
    def text(self): ...
    phash = text
    def __call__(self, context, request): ...

class MatchParamPredicate:
    val: Incomplete
    reqs: Incomplete
    def __init__(self, val, config) -> None: ...
    def text(self): ...
    phash = text
    def __call__(self, context, request): ...

class CustomPredicate:
    func: Incomplete
    def __init__(self, func, config) -> None: ...
    def text(self): ...
    def phash(self): ...
    def __call__(self, context, request): ...

class TraversePredicate:
    val: Incomplete
    def __init__(self, val, config) -> None: ...
    def text(self): ...
    def phash(self): ...
    def __call__(self, context, request): ...

class PhysicalPathPredicate:
    val: Incomplete
    def __init__(self, val, config) -> None: ...
    def text(self): ...
    phash = text
    def __call__(self, context, request): ...

class IsAuthenticatedPredicate:
    val: Incomplete
    def __init__(self, val, config) -> None: ...
    def text(self): ...
    phash = text
    def __call__(self, context, request): ...

class EffectivePrincipalsPredicate:
    val: Incomplete
    def __init__(self, val, config) -> None: ...
    def text(self): ...
    phash = text
    def __call__(self, context, request): ...

class Notted:
    predicate: Incomplete
    def __init__(self, predicate) -> None: ...
    def text(self): ...
    def phash(self): ...
    def __call__(self, context, request): ...
