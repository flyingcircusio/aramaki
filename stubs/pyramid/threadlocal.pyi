import threading
from _typeshed import Incomplete
from pyramid.registry import global_registry as global_registry

class ThreadLocalManager(threading.local):
    stack: Incomplete
    default: Incomplete
    def __init__(self, default: Incomplete | None = None) -> None: ...
    def push(self, info) -> None: ...
    set = push
    def pop(self): ...
    def get(self): ...
    def clear(self) -> None: ...

def defaults(): ...

manager: Incomplete

def get_current_request(): ...
def get_current_registry(context: Incomplete | None = None): ...

class RequestContext:
    request: Incomplete
    def __init__(self, request) -> None: ...
    def begin(self): ...
    def end(self) -> None: ...
    def __enter__(self): ...
    def __exit__(self, *args) -> None: ...
