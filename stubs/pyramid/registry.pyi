from _typeshed import Incomplete
from pyramid.decorator import reify as reify
from pyramid.interfaces import IIntrospectable as IIntrospectable, IIntrospector as IIntrospector, ISettings as ISettings
from pyramid.path import CALLER_PACKAGE as CALLER_PACKAGE, caller_package as caller_package
from zope.interface.registry import Components

class Registry(Components, dict):
    has_listeners: bool
    def __init__(self, package_name=..., *args, **kw) -> None: ...
    def __bool__(self) -> bool: ...
    def package_name(self): ...
    def registerSubscriptionAdapter(self, *arg, **kw): ...
    def registerSelfAdapter(self, required: Incomplete | None = None, provided: Incomplete | None = None, name: str = '', info: str = '', event: bool = True): ...
    def queryAdapterOrSelf(self, object, interface, default: Incomplete | None = None): ...
    def registerHandler(self, *arg, **kw): ...
    def notify(self, *events) -> None: ...
    settings: Incomplete

class Introspector:
    def __init__(self) -> None: ...
    def add(self, intr) -> None: ...
    def get(self, category_name, discriminator, default: Incomplete | None = None): ...
    def get_category(self, category_name, default: Incomplete | None = None, sort_key: Incomplete | None = None): ...
    def categorized(self, sort_key: Incomplete | None = None): ...
    def categories(self): ...
    def remove(self, category_name, discriminator) -> None: ...
    def relate(self, *pairs) -> None: ...
    def unrelate(self, *pairs) -> None: ...
    def related(self, intr): ...

class Introspectable(dict):
    order: int
    action_info: Incomplete
    category_name: Incomplete
    discriminator: Incomplete
    title: Incomplete
    type_name: Incomplete
    def __init__(self, category_name, discriminator, title, type_name) -> None: ...
    def relate(self, category_name, discriminator) -> None: ...
    def unrelate(self, category_name, discriminator) -> None: ...
    @property
    def discriminator_hash(self): ...
    def __hash__(self): ...
    def __bool__(self) -> bool: ...
    def register(self, introspector, action_info) -> None: ...

class Deferred:
    func: Incomplete
    def __init__(self, func) -> None: ...
    def value(self): ...
    def resolve(self): ...

def undefer(v): ...

class predvalseq(tuple): ...

global_registry: Incomplete
