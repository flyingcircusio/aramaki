from _typeshed import Incomplete
from pyramid import renderers as renderers
from pyramid.csrf import check_csrf_origin as check_csrf_origin, check_csrf_token as check_csrf_token
from pyramid.exceptions import ConfigurationError as ConfigurationError
from pyramid.httpexceptions import HTTPForbidden as HTTPForbidden
from pyramid.interfaces import IDebugLogger as IDebugLogger, IDefaultCSRFOptions as IDefaultCSRFOptions, IDefaultPermission as IDefaultPermission, IResponse as IResponse, ISecurityPolicy as ISecurityPolicy, IViewMapper as IViewMapper, IViewMapperFactory as IViewMapperFactory
from pyramid.response import Response as Response
from pyramid.security import NO_PERMISSION_REQUIRED as NO_PERMISSION_REQUIRED
from pyramid.util import is_bound_method as is_bound_method, is_unbound_method as is_unbound_method, object_description as object_description, takes_one_arg as takes_one_arg
from pyramid.view import render_view_to_response as render_view_to_response

def view_description(view): ...
def requestonly(view, attr: Incomplete | None = None): ...

class DefaultViewMapper:
    attr: Incomplete
    def __init__(self, **kw) -> None: ...
    def __call__(self, view): ...
    def map_class(self, view): ...
    def map_nonclass(self, view): ...
    def map_class_requestonly(self, view): ...
    def map_class_native(self, view): ...
    def map_nonclass_requestonly(self, view): ...
    def map_nonclass_attr(self, view): ...

def wraps_view(wrapper): ...
def preserve_view_attrs(view, wrapper): ...
def mapped_view(view, info): ...
def owrapped_view(view, info): ...
def http_cached_view(view, info): ...
def secured_view(view, info): ...
def rendered_view(view, info): ...
def decorated_view(view, info): ...
def csrf_view(view, info): ...

VIEW: str
INGRESS: str
