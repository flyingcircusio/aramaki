from _typeshed import Incomplete
from pyramid.decorator import reify as reify
from pyramid.i18n import LocalizerRequestMixin as LocalizerRequestMixin
from pyramid.interfaces import IRequest as IRequest, IRequestExtensions as IRequestExtensions, IResponse as IResponse, ISessionFactory as ISessionFactory
from pyramid.response import Response as Response
from pyramid.security import AuthenticationAPIMixin as AuthenticationAPIMixin, SecurityAPIMixin as SecurityAPIMixin
from pyramid.url import URLMethodsMixin as URLMethodsMixin
from pyramid.util import InstancePropertyHelper as InstancePropertyHelper, InstancePropertyMixin as InstancePropertyMixin, Sentinel as Sentinel, bytes_ as bytes_, text_ as text_
from pyramid.view import ViewMethodsMixin as ViewMethodsMixin
from webob import BaseRequest

class TemplateContext: ...

class CallbackMethodsMixin:
    def finished_callbacks(self): ...
    def response_callbacks(self): ...
    def add_response_callback(self, callback) -> None: ...
    def add_finished_callback(self, callback) -> None: ...

class Request(BaseRequest, URLMethodsMixin, CallbackMethodsMixin, InstancePropertyMixin, LocalizerRequestMixin, SecurityAPIMixin, AuthenticationAPIMixin, ViewMethodsMixin):
    exception: Incomplete
    exc_info: Incomplete
    matchdict: Incomplete
    matched_route: Incomplete
    request_iface = IRequest
    ResponseClass = Response
    def tmpl_context(self): ...
    def session(self): ...
    def response(self): ...
    def is_response(self, ob): ...

def route_request_iface(name, bases=()): ...
def add_global_response_headers(request, headerlist) -> None: ...
def call_app_with_subpath_as_path_info(request, app): ...
def apply_request_extensions(request, extensions: Incomplete | None = None) -> None: ...

class RequestLocalCache:
    NO_VALUE: Incomplete
    def __init__(self, creator: Incomplete | None = None) -> None: ...
    def __call__(self, fn): ...
    def get_or_create(self, request, creator: Incomplete | None = None): ...
    def get(self, request, default=...): ...
    def set(self, request, value) -> None: ...
    def clear(self, request): ...
