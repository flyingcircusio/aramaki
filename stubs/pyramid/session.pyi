from _typeshed import Incomplete
from pyramid.csrf import check_csrf_origin as check_csrf_origin, check_csrf_token as check_csrf_token
from pyramid.interfaces import ISession as ISession
from pyramid.util import bytes_ as bytes_, text_ as text_
from webob.cookies import JSONSerializer

def manage_accessed(wrapped): ...
def manage_changed(wrapped): ...

class PickleSerializer:
    protocol: Incomplete
    def __init__(self, protocol=...) -> None: ...
    def loads(self, bstruct): ...
    def dumps(self, appstruct): ...
JSONSerializer = JSONSerializer

def BaseCookieSessionFactory(serializer, cookie_name: str = 'session', max_age: Incomplete | None = None, path: str = '/', domain: Incomplete | None = None, secure: bool = False, httponly: bool = False, samesite: str = 'Lax', timeout: int = 1200, reissue_time: int = 0, set_on_exception: bool = True): ...
def SignedCookieSessionFactory(secret, cookie_name: str = 'session', max_age: Incomplete | None = None, path: str = '/', domain: Incomplete | None = None, secure: bool = False, httponly: bool = False, samesite: str = 'Lax', set_on_exception: bool = True, timeout: int = 1200, reissue_time: int = 0, hashalg: str = 'sha512', salt: str = 'pyramid.session.', serializer: Incomplete | None = None): ...
check_csrf_origin = check_csrf_origin
check_csrf_token = check_csrf_token
