from _typeshed import Incomplete
from translationstring.compat import PY3 as PY3, string_types as string_types, text_type as text_type

NAME_RE: str
CONTEXT_MASK: Incomplete

class TranslationString(text_type):
    domain: Incomplete
    context: Incomplete
    default: Incomplete
    mapping: Incomplete
    def __new__(self, msgid, domain: Incomplete | None = None, default: Incomplete | None = None, mapping: Incomplete | None = None, context: Incomplete | None = None): ...
    def __mod__(self, options): ...
    def interpolate(self, translated: Incomplete | None = None): ...
    def __reduce__(self): ...

def TranslationStringFactory(factory_domain): ...
def ChameleonTranslate(translator): ...
def ugettext_policy(translations, tstring, domain, context): ...
def dugettext_policy(translations, tstring, domain, context): ...
def Translator(translations: Incomplete | None = None, policy: Incomplete | None = None): ...
def ungettext_policy(translations, singular, plural, n, domain, context): ...
def dungettext_policy(translations, singular, plural, n, domain, context): ...
def Pluralizer(translations: Incomplete | None = None, policy: Incomplete | None = None): ...
