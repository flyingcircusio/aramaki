from _typeshed import Incomplete

class UpdateDict(dict):
    updated: Incomplete
    updated_args: Incomplete
    def __setitem__(self, key, item) -> None: ...
    def __delitem__(self, key) -> None: ...
    def clear(self) -> None: ...
    def update(self, *args, **kw) -> None: ...
    def setdefault(self, key, value: Incomplete | None = None): ...
    def pop(self, *args): ...
    def popitem(self): ...

token_re: Incomplete
need_quote_re: Incomplete

class exists_property:
    prop: Incomplete
    type: Incomplete
    def __init__(self, prop, type: Incomplete | None = None) -> None: ...
    def __get__(self, obj, type: Incomplete | None = None): ...
    def __set__(self, obj, value) -> None: ...
    def __delete__(self, obj) -> None: ...

class value_property:
    prop: Incomplete
    default: Incomplete
    none: Incomplete
    type: Incomplete
    def __init__(self, prop, default: Incomplete | None = None, none: Incomplete | None = None, type: Incomplete | None = None) -> None: ...
    def __get__(self, obj, type: Incomplete | None = None): ...
    def __set__(self, obj, value) -> None: ...
    def __delete__(self, obj) -> None: ...

class CacheControl:
    update_dict = UpdateDict
    properties: Incomplete
    type: Incomplete
    def __init__(self, properties, type) -> None: ...
    @classmethod
    def parse(cls, header, updates_to: Incomplete | None = None, type: Incomplete | None = None): ...
    max_stale: Incomplete
    min_fresh: Incomplete
    only_if_cached: Incomplete
    public: Incomplete
    private: Incomplete
    no_cache: Incomplete
    no_store: Incomplete
    no_transform: Incomplete
    must_revalidate: Incomplete
    proxy_revalidate: Incomplete
    max_age: Incomplete
    s_maxage: Incomplete
    s_max_age = s_maxage
    stale_while_revalidate: Incomplete
    stale_if_error: Incomplete
    def copy(self): ...

def serialize_cache_control(properties): ...
